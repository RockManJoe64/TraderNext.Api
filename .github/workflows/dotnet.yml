name: .NET Build, Pack, and Push

on:
  push:
    branches: [ develop ]

jobs:
  dotnet_build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Setup version
      run: |
        VERSION=`jq ".info.version" openapi.json | tr -d \"`
        VERSION_NEW=`echo $VERSION | sed -e "s/X/$GITHUB_RUN_NUMBER/"`
        sed -i -e "s/$VERSION/$VERSION_NEW/" openapi.json
        CONFIGURATION=Release
        echo "BUILD_VERSION=`echo $VERSION_NEW`" >> $GITHUB_ENV
        echo "CONFIG=$CONFIGURATION" >> $GITHUB_ENV
        echo "NUPKG_PATH=./bin/$CONFIGURATION/TraderNext.Api.$VERSION_NEW.nupkg" >> $GITHUB_ENV

    - name: Adjust NuGet config credentials
      run: |
        rm -f ./nuget.config
        mv nuget.ci.config nuget.config
        echo $(sed -e "s/\${USER}/${{ secrets.PACKAGE_USER }}/" -e "s@\${PAT}@${{ secrets.PACKAGE_PASSWORD }}@" nuget.config) > nuget.config

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration ${{ env.CONFIG }} /p:VersionPrefix=${{ env.BUILD_VERSION }}

    - name: Pack
      run: dotnet pack --configuration ${{ env.CONFIG }} /p:Version=${{ env.BUILD_VERSION }}

    - name: Push
      run: dotnet nuget push ${{ env.NUPKG_PATH }} --source "github" --skip-duplicate --api-key ${{ secrets.PACKAGE_PASSWORD }}

  typescript_build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Use Node.js 14.x
      uses: actions/setup-node@v1
      with:
        node-version: 14.x

    - name: Setup version
      run: |
        VERSION_NEW=`jq '.version' ./typescript/package.json | sed -e "s/\.0/\.$GITHUB_RUN_NUMBER/"`
        sed -i -e "s/\"version\":.*/\"version\": $VERSION_NEW,/" ./typescript/package.json
        CONFIGURATION=Release
        echo "BUILD_VERSION=`echo $VERSION_NEW`" >> $GITHUB_ENV
        echo "CONFIG=$CONFIGURATION" >> $GITHUB_ENV

    - name: Adjust NuGet config credentials
      run: |
        rm -f ./nuget.config
        mv nuget.ci.config nuget.config
        echo $(sed -e "s/\${USER}/${{ secrets.PACKAGE_USER }}/" -e "s@\${PAT}@${{ secrets.PACKAGE_PASSWORD }}@" nuget.config) > nuget.config

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration ${{ env.CONFIG }} /p:VersionPrefix=${{ env.BUILD_VERSION }}

    - name: Setup NPM credentials
      run: |
        rm -rf ./typescript/.npmrc
        mv ./typescript/.npmrcci ./typescript/.npmrc
        sed -i -e "s/GITHUB_TOKEN/$GITHUB_TOKEN/" ./typescript/.npmrc
      env:
        GITHUB_TOKEN: ${{ secrets.PACKAGE_PASSWORD }}

    - name: Compile typescript
      run: |
        cd typescript
        npm install typescript --save-dev
        tsc
    
    - name: Publish
      run: npm publish
